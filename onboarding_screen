import 'package:carousel_slider/carousel_slider.dart';
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:smooth_page_indicator/smooth_page_indicator.dart';

import '../../model/carousel_model.dart';
import '../../utils/colors.dart';
import '../../utils/constant.dart';
import '../../widgets/custom_methods.dart';
import '../homeScreens/drawer/custom_drawer.dart';

const String nextText = "Next ";
const String getStartText = "Get Start ";
const String skip = "Skip ";
const String arrowImg = "assets/icons/arrow.png";
const String imgPath = "assets/images/";

class OnBoardingScreen extends StatefulWidget {
  const OnBoardingScreen({Key? key}) : super(key: key);

  @override
  State<OnBoardingScreen> createState() => _OnBoardingScreenState();
}

class _OnBoardingScreenState extends State<OnBoardingScreen> {
  var height = 0.0;
  var width = 0.0;
  int activeIndex = 0;
  final List<CarouselModel> onBoardingList = [
    CarouselModel(
        title: 'Shopping Anytime',
        text:
            'A product is the item offered for sale. A product can be a service or an item. It can be physical or in virtual or cyber form',
        imgUrl: 'onboarding1.png'),
    CarouselModel(
        title: 'Choose Product',
        text:
            'A product is the item offered for sale. A product can be a service or an item. It can be physical or in virtual or cyber form',
        imgUrl: 'onboarding2.png'),
    CarouselModel(
        title: 'Get Your Order',
        text:
            'Business or commerce an order is a stated intention either spoken to engage in a commercial transaction specific products',
        imgUrl: 'onboarding2.png'),
  ];
  @override
  Widget build(BuildContext context) {
    height = MediaQuery.of(context).size.height;
    width = MediaQuery.of(context).size.width;
    return Scaffold(
      body: SafeArea(
        child: Container(
          margin: EdgeInsets.only(top: height / 20),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.start,
            children: [
              CarouselSlider.builder(
                itemCount: onBoardingList.length,
                itemBuilder: (context, index, relIndex) {
                  final onBoardTitle = onBoardingList[index].title;
                  final onBoardText = onBoardingList[index].text;
                  final onBoardImg = onBoardingList[index].imgUrl;
                  return buildOnBoardingScreen(
                      onBoardTitle, onBoardText, onBoardImg);
                },
                options: CarouselOptions(
                    height: MediaQuery.of(context).size.height / 2,
                    reverse: false,
                    enlargeCenterPage: true,
                    enlargeStrategy: CenterPageEnlargeStrategy.height,
                    onPageChanged: (index, reason) {
                      setState(() {
                        activeIndex = index;
                      });
                    }),
              ),
              SizedBox(
                height: height / 18,
              ),
              buildIndicator(),
              SizedBox(
                height: height / 30,
              ),
              Container(
                margin: EdgeInsets.symmetric(horizontal: 30),
                child: Column(
                  children: [
                    Text(
                      onBoardingList[activeIndex].title,
                      style: TextStyle(
                        fontSize: 25,
                        color: primary,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    SizedBox(
                      height: height / 60,
                    ),
                    Text(
                      onBoardingList[activeIndex].text,
                      style: TextStyle(
                        fontSize: 15,
                      ),
                      textAlign: TextAlign.center,
                    ),
                    SizedBox(
                      height: height / 60,
                    ),
                    next,
                    SizedBox(
                      height: height / 60,
                    ),
                    skipText
                  ],
                ),
              )
            ],
          ),
        ),
      ),
    );
  }

  Widget get next => Column(
        children: [
          if (activeIndex == 0)
            InkWell(
              onTap: () {
                setState(() {
                  activeIndex = 1;
                });
              },
              child: Container(
                  alignment: Alignment.center,
                  height: 50,
                  width: width * 0.45,
                  decoration: BoxDecoration(
                    // color: secondary,
                    gradient: buttonGradient,
                    borderRadius: BorderRadius.circular(30),
                  ),
                  child: Row(
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      Text(
                        nextText,
                        style:
                            TextStyle(color: primarySplashColor, fontSize: 18),
                      ),
                      SizedBox(
                        width: 8,
                      ),
                      Image.asset(arrowImg, color: primarySplashColor),
                    ],
                  )),
            ),
          if (activeIndex == 1)
            InkWell(
              onTap: () {
                setState(() {
                  activeIndex = 2;
                });
              },
              child: Container(
                  alignment: Alignment.center,
                  height: 50,
                  width: width * 0.45,
                  decoration: BoxDecoration(
                    // color: secondary,
                    gradient: buttonGradient,
                    borderRadius: BorderRadius.circular(30),
                  ),
                  child: Row(
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      Text(
                        nextText,
                        style:
                            TextStyle(color: primarySplashColor, fontSize: 18),
                      ),
                      SizedBox(
                        width: 8,
                      ),
                      Image.asset(arrowImg, color: primarySplashColor),
                      // Image.asset('assets/icons/arrow.png',color: white.withOpacity(0.75)),
                      // Image.asset('assets/icons/arrow.png',color: white,),
                    ],
                  )),
            ),
          if (activeIndex == 2)
            InkWell(
              onTap: () {
                _initFun();
                navPushReplace(context: context, action: MyDrawer());
              },
              child: Container(
                  alignment: Alignment.center,
                  height: 50,
                  width: width * 0.45,
                  decoration: BoxDecoration(
                    // color: secondary,
                    gradient: buttonGradient,
                    borderRadius: BorderRadius.circular(30),
                  ),
                  child: Row(
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      Text(
                        getStartText,
                        style:
                            TextStyle(color: primarySplashColor, fontSize: 18),
                      ),
                      Image.asset(arrowImg,
                          color: primarySplashColor.withOpacity(0.5)),
                      Image.asset(arrowImg,
                          color: primarySplashColor.withOpacity(0.75)),
                      Image.asset(
                        arrowImg,
                        color: primarySplashColor,
                      ),
                    ],
                  )),
            ),
        ],
      );

  Widget get skipText => Container(
        child: TextButton(
          onPressed: () {
            _initFun();
            navPushRemove(context: context, action: MyDrawer());
            setState(() {
              activeIndex = 0;
            });
          },
          child: Text(
            skip,
            style: TextStyle(color: black, fontSize: 18),
          ),
        ),
      );

  _initFun() async {
    SharedPreferences pref = await SharedPreferences.getInstance();
    setState(() {
      pref.setBool(isInitKey, true);
    });
  }

  Widget buildOnBoardingScreen(
      String onBoardTitle, String onBoardText, String onBoardImg) {
    return Container(
      decoration: BoxDecoration(
        borderRadius: BorderRadius.all(Radius.circular(25.0)),
        image: DecorationImage(
          image: AssetImage('$imgPath$onBoardImg'),
          fit: BoxFit.cover,
        ),
      ),
      margin: EdgeInsets.symmetric(
        horizontal: 12,
      ),
    );
  }

  Widget buildIndicator() => AnimatedSmoothIndicator(
        activeIndex: activeIndex,
        count: onBoardingList.length,
        effect: ExpandingDotsEffect(
          dotColor: primarySplashColor,
          dotHeight: 8,
          dotWidth: 8,
          activeDotColor: primarySplashColor,
        ),
      );
}
